{{ define "base" }}
  <!DOCTYPE html>
  <html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css" integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/css/datepicker-bs4.min.css">
    <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
    <link rel="stylesheet" type="text/css" href="/static/css/styles.css" />

    {{ block "css" . }}
    {{ end }}

    <title>Home</title>
  </head>
  <body>
    {{ block "content" . }}
    {{ end }}

    <script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.min.js" integrity="sha384-+sLIOodYLS7CIrQpBjl+C7nPvqq+FbNUBDunl/OZv93DB7Ln/533i8e/mZXLi/P+" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/js/datepicker-full.min.js"></script>
    <script src="https://unpkg.com/notie"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    {{ block "js" . }}
    {{ end }}

    <!--Reservation-->
    <script>
      let attention = Prompt();

      (function() {
        'use strict';
        window.addEventListener('load', function() {
          // Fetch all the forms we want to apply custom Bootstrap validation styles to
          let forms = document.getElementsByClassName('needs-validation');

          // Loop over them and prevent submission
          Array.prototype.filter.call(forms, function(form) {
            form.addEventListener('submit', function(event) {
              if (form.checkValidity() === false) {
                event.preventDefault();
                event.stopPropagation();
              }
              form.classList.add('was-validated');
            }, false);
          });
        }, false);
      })();

      const dateRangePickerElement = document.getElementById('reservation-dates');
      const rangepicker = new DateRangePicker(dateRangePickerElement, {
        format: "yyyy-mm-dd"
      }); 

      function notify(msg, type) {
        notie.alert({
          type: type,
          text: msg
        });
      }

      function notifyModal(title, html, icon, confirmationButton) {
        Swal.fire({
          title: title,
          html: html,
          icon: icon,
          confirmButtonText: confirmationButton
        });
      }
      
      function Prompt() {
        let toast = function(c) {
          const {
            msg = "",
            icon = "success",
            position = "top-end"
          } = c;

          const Toast = Swal.mixin({
            toast: true,
            title: msg,
            position: position,
            icon: icon,
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
              toast.addEventListener('mouseenter', Swal.stopTimer)
              toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
          });

          Toast.fire();
        }

        let success = function(c) {
          const { msg = '', title = '', footer = ''} = c;

          Swal.first({
            icon: 'success',
            title: title,
            text: msg,
            footer: footer
          })
        }

        let error = function(c) {
          const { msg = '', title = '', footer = ''} = c;

          Swal.first({
            icon: 'error',
            title: title,
            text: msg,
            footer: footer
          })
        }

        async function custom(c) {
          const { msg = '', title = '' } = c;

          const { value: formValues } = await Swal.fire({
            title: title,
            html: msg,
            backdrop: false,
            focusConfirm: false,
            showCancelButton: true,
            preConfirm: () => {
              return [
                document.getElementById('swal-input1').value,
                document.getElementById('swal-input2').value
              ]
            }
          })

          if (formValues) {
            Swal.fire(JSON.stringify(formValues))
          }
        }

        return {
          toast: toast,
          success: success,
          error: error,
          custom: custom
        }
      }
    </script>
  </body>
  </html>
{{ end }}